# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}


server {
    listen 80 default_server;
    server_name ${CSD_DOMAIN_NAME} ${CSD_WEBSITE_DOMAIN_NAME};
    resolver $NAMESERVER ipv6=off valid=5s;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_http_version 1.1;
    gzip_disable      "MSIE [1-6]\.";
    gzip_min_length   1100;
    gzip_vary         on;
    gzip_proxied      expired no-cache no-store private auth;
    gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level   9;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;

        set $target_webapp $CSD_WEBAPP_SERVER_WEBAPP_HOST$FQDN_SUFFIX;
        proxy_pass http://$target_webapp:$CSD_WEBAPP_SERVER_WEBAPP_HTTP_PORT;

        # to make websocket pass through
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # expensive testing utils need more than default 60s:
        proxy_read_timeout 300s;

        client_max_body_size $CSD_WEBAPP_SERVER_PROXY_MAX_UPLOAD_SIZE;

    }

}



server {
    listen 80;
    server_name ${CSD_WEBAPP_DOMAIN_NAME};
    resolver $NAMESERVER ipv6=off valid=5s;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_http_version 1.1;
    gzip_disable      "MSIE [1-6]\.";
    gzip_min_length   1100;
    gzip_vary         on;
    gzip_proxied      expired no-cache no-store private auth;
    gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level   9;


    # Forward to webapp-frontend-webapp
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;

        set $target_frontend $CSD_WEBAPP_FRONTEND_WEBAPP_HOST$FQDN_SUFFIX;
        proxy_pass http://$target_frontend:$CSD_WEBAPP_FRONTEND_WEBAPP_HTTP_PORT;

        # to make websocket pass through
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # 

    # Forward to the backend
    location ~^\/(api|${CSD_WEBAPP_SERVER_ADMIN_URL}|${CSD_WEBAPP_SERVER_CMS_URL}|__debug__) {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;

        set $target_webapp $CSD_WEBAPP_SERVER_WEBAPP_HOST$FQDN_SUFFIX;
        proxy_pass http://$target_webapp:$CSD_WEBAPP_SERVER_WEBAPP_HTTP_PORT;

        # to make websocket pass through
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        client_max_body_size $CSD_WEBAPP_SERVER_PROXY_MAX_UPLOAD_SIZE;

    }

}


# Frontend for Assets/Media (minio)
server {
    listen 80;
    server_name $CSD_WEBAPP_CDN_DOMAIN_NAME;
    resolver $NAMESERVER ipv6=off valid=5s;

    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;

    location / {

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        set $target_minio $CSD_WEBAPP_SERVER_MINIO_HOST$FQDN_SUFFIX;
        proxy_pass http://$target_minio:$CSD_WEBAPP_SERVER_MINIO_PORT;
    }

#    location /media {
#       root /srv/webapp;
#
#       # the browser always should download files in /media/generated:
#       if ($request_filename ~ "^.*/media/generated/.*/(.+)$"){
#         set $filename $1;
#         add_header Content-Disposition 'attachment; filename="$filename"';
#       }
#     }

}
